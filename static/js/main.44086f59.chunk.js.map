{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","components/Menu.tsx","game/playerSlice.ts","hooks.ts","components/ProgressBar.tsx","game/components/CurrentActivityComponent.tsx","game/XPService.ts","game/components/PlayerDetailsComponent.tsx","game/components/ActivityLogComponent.tsx","game/components/StoryComponent.tsx","game/GamePage.tsx","home/CharacterEditor.tsx","storage.ts","game/SaveGameService.ts","home/CharacterSelection.tsx","home/HomePage.tsx","game/Activity.ts","game/random.ts","game/ActivityFactory.ts","game/StoryGenerator.ts","game/gameSaga.ts","store.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","appPages","title","url","iosIcon","mailOutline","mdIcon","mailSharp","Menu","location","useLocation","contentId","type","appPage","index","autoHide","className","pathname","routerLink","routerDirection","lines","detail","slot","ios","md","initialState","version","name","xp","currentActivity","undefined","activityLog","quests","open","active","completed","playerSlice","createSlice","reducers","newGameStarted","state","action","payload","playerName","gameLoaded","questStarted","activeQuestChanged","actionStarted","activityFinished","activity","xpReward","newActivityLog","slice","Math","min","length","actions","startGame","createAction","selectXP","player","selectName","selectCurrentActivity","selectActivityLog","selectActiveQuest","selectCompletedQuests","selectNextQuestActivity","openActivities","selectGame","playerReducer","reducer","useAppSelector","useSelector","ProgressBar","value","animated","animationDurationInMS","label","color","barColor","barLabel","round","animation","useRef","useEffect","current","stop","play","duration","iterations","Infinity","fromTo","property","fromValue","toValue","ref","style","width","backgroundColor","CurrentActivityComponent","getRequiredXPForLevel","level","PlayerDetailsComponent","floor","getLevelByXP","nextLevelXP","levelProgress","currentLevel","currentXP","xpRequiredForCurrentLevel","getLevelProgress","ActivityLogComponent","StoryComponent","activeQuest","completedQuests","a","q","GamePage","gameId","useParams","dispatch","useDispatch","fullscreen","collapse","size","CharacterEditor","useState","setName","placeholder","onIonChange","storage","Storage","driverOrder","Drivers","LocalStorage","IndexedDB","getStorage","create","SaveGameService","listSaveGames","gameKeys","filter","k","startsWith","saveGames","i","key","get","json","game","JSON","parse","push","CharacterSelection","setSaveGames","sg","href","HomePage","newActivity","uuid","getRandomFromArray","array","random","activityGenerators","slayMonster","verb","monster","roamArea","loot","object","ActivityFactory","generatorNames","randomChoice","StoryGenerator","startGameSaga","startNewGameSaga","gameSaga","saveGameSaga","loadGameSaga","startNewAction","gameLoopSaga","advanceQuest","call","apply","includes","quest","put","takeLatest","select","gameState","stringify","set","gameStateJson","randomEncounter","fork","advanceQuestTask","console","error","delay","cancel","impl","newActiveQuest","newOpenActivities","shift","updatedQuest","takeEvery","sagaMiddleware","createSagaMiddleware","store","configureStore","middleware","run","App","path","exact","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"wFAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.44086f59.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t97,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t98,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t99,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t100,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t101,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t102,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t103,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t104,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t105,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t106,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t107,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t108,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t109,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t110,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t111,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t112,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t113,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t114,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t115,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t116,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t117,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t118,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t119,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t120,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t121,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t122,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t123,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t124,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t125,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t126,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t127,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t128,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t129,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t130,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t131,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t132,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t133,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t134,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t135,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t136,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t137,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t138,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t139,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 70;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t140,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 72;\nmodule.exports = webpackAsyncContext;","import {\n  IonContent,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonListHeader,\n  IonMenu,\n  IonMenuToggle,\n  IonNote,\n} from '@ionic/react';\n\nimport { useLocation } from 'react-router-dom';\nimport { archiveOutline, archiveSharp, bookmarkOutline, heartOutline, heartSharp, mailOutline, mailSharp, paperPlaneOutline, paperPlaneSharp, trashOutline, trashSharp, warningOutline, warningSharp } from 'ionicons/icons';\nimport './Menu.css';\nimport { SaveGameService } from '../game/SaveGameService';\nimport { useEffect, useState } from 'react';\n\ninterface AppPage {\n  url: string;\n  iosIcon: string;\n  mdIcon: string;\n  title: string;\n}\n\nconst appPages: AppPage[] = [\n  {\n    title: 'Inbox',\n    url: '/',\n    iosIcon: mailOutline,\n    mdIcon: mailSharp\n  },\n];\n\nconst Menu: React.FC = () => {\n  const location = useLocation();\n\n  return (\n    <IonMenu contentId=\"main\" type=\"overlay\">\n      <IonContent>\n        <IonList id=\"inbox-list\">\n          <IonListHeader>Inbox</IonListHeader>\n          <IonNote>hi@ionicframework.com</IonNote>\n          {appPages.map((appPage, index) => {\n            return (\n              <IonMenuToggle key={index} autoHide={false}>\n                <IonItem className={location.pathname === appPage.url ? 'selected' : ''} routerLink={appPage.url} routerDirection=\"none\" lines=\"none\" detail={false}>\n                  <IonIcon slot=\"start\" ios={appPage.iosIcon} md={appPage.mdIcon} />\n                  <IonLabel>{appPage.title}</IonLabel>\n                </IonItem>\n              </IonMenuToggle>\n            );\n          })}\n        </IonList>\n      </IonContent>\n    </IonMenu>\n  );\n};\n\nexport default Menu;\n","import { v4 as uuid } from 'uuid';\nimport { createAction, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport type { RootState } from '../store';\nimport { Activity } from './Activity';\nimport { Quest } from './Chapter';\n\nexport interface PlayerState {\n    version: number\n    id: string\n    name: string\n    xp: number\n    currentActivity?: Activity,\n    activityLog: Activity[],\n    quests: {\n        open: Quest[],\n        active?: Quest,\n        completed: Quest[]\n    }\n}\n\nconst initialState: PlayerState = {\n    version: 1,\n    id: '',\n    name: 'Player',\n    xp: 0,\n    currentActivity: undefined,\n    activityLog: [],\n    quests: {\n        open: [],\n        active: undefined,\n        completed: []\n    }\n};\n\nexport const playerSlice = createSlice({\n    name: 'player',\n    initialState,\n    reducers: {\n        newGameStarted: (state, action: PayloadAction<{id: string, playerName: string}>) => {\n            state.id = action.payload.id;\n            state.name = action.payload.playerName;\n        },\n        gameLoaded: (state, action: PayloadAction<PlayerState>) => {\n            return action.payload;\n        },\n        questStarted: (state, action: PayloadAction<Quest>) => {\n            if (state.quests.active) {\n                state.quests.completed = [state.quests.active, ...state.quests.completed];\n            }\n\n            state.quests.active = action.payload;\n        },\n        activeQuestChanged: (state, action: PayloadAction<Quest>) => {\n            state.quests.active = action.payload;\n        },\n        actionStarted: (state, action: PayloadAction<Activity>) => {\n            state.currentActivity = action.payload;\n        },\n        activityFinished: (state, action: PayloadAction<Activity>) => {\n            const activity = action.payload;\n            state.xp += activity.xpReward;\n            \n            const newActivityLog = [activity, ...state.activityLog]\n            state.activityLog = newActivityLog.slice(0, Math.min(newActivityLog.length, 100))\n        }\n    }\n});\n\nexport const { newGameStarted, gameLoaded, actionStarted, questStarted, activeQuestChanged, activityFinished } = playerSlice.actions;\nexport const startGame = createAction<string>('game/startGame')\n\nexport const selectXP = (state: RootState) => state.player.xp;\nexport const selectName = (state: RootState) => state.player.name;\nexport const selectCurrentActivity = (state: RootState) => state.player.currentActivity;\nexport const selectActivityLog = (state: RootState) => state.player.activityLog;\n\nexport const selectActiveQuest = (state: RootState) => state.player.quests.active;\nexport const selectCompletedQuests = (state: RootState) => state.player.quests.completed;\nexport const selectNextQuestActivity = (state: RootState): Activity|undefined => {\n    if (state.player.quests.active) {\n        if (state.player.quests.active.openActivities.length > 0) {\n            return state.player.quests.active.openActivities[0]\n        }\n    }\n    return undefined;\n}\n\nexport const selectGame = (state: RootState) => state.player;\n\nexport const playerReducer = playerSlice.reducer;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { CreateAnimation, Animation } from '@ionic/react';\nimport React, { useEffect, useRef } from 'react';\nimport './ProgressBar.css';\n\ninterface ProgressBarProps {\n    value: number\n    animated?: boolean\n    animationDurationInMS?: number\n    label?: string\n    color?: string\n}\n\nexport const ProgressBar: React.FC<ProgressBarProps> = ({value, animated, animationDurationInMS, label, color}) => {\n    const barColor = color ?? 'green';\n    const barLabel = label ?? Math.round(value * 100) + '%'\n\n    const animation: any = useRef(null);\n    useEffect(() => {\n        if (animation && animated) {\n            animation.current!.animation.stop();\n            animation.current!.animation.play();\n        }\n    }, [animated, animationDurationInMS, animation])\n\n    return (<>\n        <div className=\"progressbar-outer\">\n            <CreateAnimation\n                duration={animationDurationInMS}\n                iterations={Infinity}\n                fromTo={{\n                    property: \"width\",\n                    fromValue: \"0\",\n                    toValue: \"100%\"\n                }}\n                // keyframes={[\n                //     { offset: 0, background: 'red' },\n                //     { offset: 0.72, background: 'blue' },\n                //     { offset: 1, background: 'green' }\n                // ]}\n                ref={animation}\n            >\n                <div className=\"progressbar-inner\" style={{width: `${value*100}%`, backgroundColor: barColor}}></div>\n            </CreateAnimation>\n            <div className=\"progressbar-percentage\"><span>{barLabel}</span></div>\n        </div>\n        </>\n    )\n}","import React from 'react';\nimport { selectCurrentActivity } from '../playerSlice';\nimport { useAppSelector } from '../../hooks';\nimport { ProgressBar } from '../../components/ProgressBar';\n\nexport const CurrentActivityComponent: React.FC = () => {\n    const currentActivity = useAppSelector(selectCurrentActivity)\n    return <>\n        <span>{currentActivity ? currentActivity.name : 'Idle'}</span>\n        <ProgressBar\n            label={currentActivity ? currentActivity.name : ''}\n            value={0}\n            animated={true}\n            animationDurationInMS={currentActivity ? currentActivity.duration * 1000 : 0} />\n    </>\n}","export function getRequiredXPForLevel(level: number): number {\n    if (level <= 0) {\n        return 0;\n    }\n\n    return (level - 1) * 100;\n}\n\nexport function getLevelByXP(xp: number): number {\n    if (xp <= 0) {\n        return 1;\n    }\n\n    return 1 + Math.floor(xp / 100);\n}\n\nexport function getLevelProgress(currentLevel: number, currentXP: number): number {\n    const xpRequiredForCurrentLevel = getRequiredXPForLevel(currentLevel);\n    const xpRequiredForNextLevel = getRequiredXPForLevel(currentLevel + 1);\n\n    return (currentXP - xpRequiredForCurrentLevel) / (xpRequiredForNextLevel - xpRequiredForCurrentLevel); \n}","import React from 'react';\nimport { selectXP } from '../playerSlice';\nimport { getLevelByXP, getLevelProgress, getRequiredXPForLevel } from '../XPService';\nimport { useAppSelector } from '../../hooks';\nimport { ProgressBar } from '../../components/ProgressBar';\n\nexport const PlayerDetailsComponent: React.FC = () => {\n    const xp = useAppSelector(selectXP);\n    const level = getLevelByXP(xp);\n    const nextLevelXP = getRequiredXPForLevel(level + 1)\n  \n    const levelProgress = getLevelProgress(level, xp);\n  \n    const label = `${xp} / ${nextLevelXP} XP`;\n\n    return <>\n        <div>Level {level} <ProgressBar value={levelProgress} label={label} color=\"blue\" /></div>\n    </>\n}","import React from 'react';\nimport { selectActivityLog } from '../playerSlice';\nimport { useAppSelector } from '../../hooks';\n\nexport const ActivityLogComponent: React.FC = () => {\n    const activityLog = useAppSelector(selectActivityLog);\n\n    return <div>\n        <div>Recent activities:</div>\n        { activityLog.length > 0 ?\n            <ul>{activityLog.map((activity) => <li key={activity.id}>{activity.name} (+{activity.xpReward} XP)</li>)}</ul> :\n            <div>Nothing</div>\n        }\n    </div>\n}","import React from 'react';\nimport { questStarted, selectActiveQuest, selectCompletedQuests } from '../playerSlice';\nimport { useAppSelector } from '../../hooks';\n\nexport const StoryComponent: React.FC = () => {\n    const activeQuest = useAppSelector(selectActiveQuest);\n    const completedQuests = useAppSelector(selectCompletedQuests);\n\n    return <>\n        <div>Active Quest:</div>\n        <div>{activeQuest ? activeQuest.title : 'None'}</div>\n        <ul>\n            {activeQuest ? activeQuest.openActivities.map(a => <li key={a.id}>{a.name}</li>) : null}\n        </ul>\n        <div>Open Quests:</div>\n        <div>The story so far:</div>\n        <ul>\n            {completedQuests.map(q => <li key={q.id}>{q.title}</li>)}\n        </ul>\n    </>\n}","import { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar, IonGrid, IonRow, IonCol, IonButton } from '@ionic/react';\nimport { useEffect } from 'react';\nimport { CurrentActivityComponent } from './components/CurrentActivityComponent';\nimport { PlayerDetailsComponent } from './components/PlayerDetailsComponent';\nimport { ActivityLogComponent } from './components/ActivityLogComponent';\nimport { selectName, startGame } from './playerSlice';\nimport { useAppDispatch, useAppSelector } from '../hooks';\nimport { StoryComponent } from './components/StoryComponent';\nimport { useParams } from 'react-router';\n\nexport const GamePage: React.FC = () => {\n  const { gameId } = useParams<{gameId: string}>()\n\n  const playerName = useAppSelector(selectName);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(startGame(gameId))\n  }, [gameId])\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>{playerName}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">{playerName}</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonGrid>\n          <IonRow>\n            <IonCol size=\"12\" size-lg=\"6\">\n              <CurrentActivityComponent />\n              <ActivityLogComponent />\n            </IonCol>\n            <IonCol size=\"12\" size-lg=\"6\">\n              <PlayerDetailsComponent />\n              <StoryComponent />\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n","import { IonHeader, IonInput, IonItem, IonLabel, IonList, IonRadio, IonRadioGroup, IonSelect, IonSelectOption, IonTitle } from '@ionic/react';\nimport React, { useState } from 'react';\n\nexport const CharacterEditor = () => {\n  const [name, setName] = useState<string>();\n\n  return (<>\n    <IonHeader>\n      <IonTitle>Create new hero</IonTitle>\n    </IonHeader>\n    <IonList>\n      <IonItem>\n        <IonInput value={name} placeholder=\"Player Name\" onIonChange={e => setName(e.detail.value!)}></IonInput>\n      </IonItem>\n      <IonItem>\n        <IonLabel>Character class</IonLabel>\n        <IonSelect>\n          <IonSelectOption value=\"carpenter\">Carpenter</IonSelectOption>\n        </IonSelect>\n      </IonItem>\n    </IonList>\n  </>)\n}","import { Drivers, Storage } from '@ionic/storage';\n\nconst storage = new Storage({\n    driverOrder: [Drivers.LocalStorage, Drivers.IndexedDB]\n});\n\nexport const getStorage = async () => {\n    await storage.create()\n    return storage;\n}","import { getStorage } from \"../storage\"\nimport { PlayerState } from \"./playerSlice\";\n\nexport interface SaveGameInfo {\n    id: string\n    playerName: string\n}\n\nexport const SaveGameService = {\n    listSaveGames: async (): Promise<SaveGameInfo[]> => {\n        const storage = await getStorage();\n        const keys = await storage.keys();\n\n        const gameKeys = keys.filter(k => k.startsWith('game_'))\n\n        const saveGames: SaveGameInfo[] = [];\n        for (const i in gameKeys) {\n            const key: string = gameKeys[i]\n            const json: string = await storage.get(key);\n            const game: PlayerState = JSON.parse(json);\n\n            saveGames.push({\n                id: game.id,\n                playerName: game.name\n            })\n        }\n\n        return saveGames;\n    }\n}","import { IonHeader, IonItem, IonLabel, IonList, IonListHeader, IonTitle } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport { SaveGameInfo, SaveGameService } from '../game/SaveGameService';\n\nexport const CharacterSelection: React.FC = () => {\n  const [ saveGames, setSaveGames ] = useState<SaveGameInfo[]>([]);\n  useEffect(() => {\n    SaveGameService.listSaveGames().then(setSaveGames);\n  }, [])\n\n  return (<>\n    <IonHeader>\n      <IonTitle>Continue adventure</IonTitle>\n    </IonHeader>\n    <IonList>\n      {saveGames.map(sg =>\n        <IonItem key={sg.id} href={`/game/${sg.id}`}>\n          <IonLabel>{sg.playerName}</IonLabel>\n        </IonItem>\n      )}\n    </IonList>\n  </>)\n}","import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport React from 'react';\nimport { CharacterEditor } from './CharacterEditor';\nimport { CharacterSelection } from './CharacterSelection';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Welcome to BarQuest</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <CharacterEditor />\n        <CharacterSelection />\n      </IonContent>\n    </IonPage>\n  )\n}","import {v4 as uuid } from 'uuid';\n\nexport interface Activity\n{\n    id: string\n    name: string\n    duration: number\n    xpReward: number\n}\n\nexport const newActivity = (name: string, duration: number, xpReward: number): Activity => {\n    return {\n        id: uuid(),\n        name, duration, xpReward\n    }\n}","export function getRandomFromArray<T>(array: Array<T>): T {\n    return array[Math.floor(Math.random() * array.length)];\n}","import { Activity, newActivity } from \"./Activity\";\nimport { getRandomFromArray } from \"./random\";\n\nconst slayMonster = (): Activity => {\n    const verbs = ['Slaying', 'Killing', 'Fighting', 'Battling', 'Engaging']\n    const monsters = ['Orc', 'Daemon', 'Imp', 'Rat', 'Goblin', 'Zombie', 'Mutant', 'Ghost', 'Dark Spirit', 'Skeleton', 'Evil Presence', 'Grasshopper', 'Ant', 'Spider']\n    const xps = [2, 3, 4, 5, 7]\n    \n    const verb = getRandomFromArray(verbs);\n    const monster = getRandomFromArray(monsters);\n    const xp = getRandomFromArray(xps);\n    const duration = xp;\n\n    return newActivity(`${verb} ${monster}`, duration, xp)\n}\n\nconst roamArea = () => {\n    const descriptions = [\"Roaming area\", \"Searching areal\", \"Investigate surroundings\", \"Tracking footsteps\", \"Following trails\"]\n    return newActivity(getRandomFromArray(descriptions), 5, 1)\n}\n\nconst loot = () => {\n    const verbs = ['Looting', 'Plundering', 'Pillaging', 'Robbing', 'Ransacking']\n    const objects = ['Corpse', 'Body', 'Chest', 'Trove', 'Hideout', 'House', 'Shack', 'Cave', 'Den', 'Lair', 'Crate', 'Case', 'Hutch', 'Box', 'Sack']\n\n    const verb = getRandomFromArray(verbs);\n    const object = getRandomFromArray(objects)\n\n    return newActivity(`${verb} ${object}`, 2, 1)\n}\n\nconst activityGenerators: {[name: string]: () => Activity} = {\n    slayMonster, roamArea, loot\n}\n\nexport const ActivityFactory = {\n    newActivity(): Activity {\n        const generatorNames = Object.keys(activityGenerators);\n        const randomChoice = generatorNames[Math.floor(generatorNames.length * Math.random())]\n\n        return activityGenerators[randomChoice]();\n    }\n}","import { v4 as uuid } from 'uuid';\nimport { ActivityFactory } from \"./ActivityFactory\";\nimport { Quest } from \"./Chapter\";\nimport { getRandomFromArray } from './random';\n\nexport interface IStoryGenerator {\n    generatePrologue: () => Quest\n    generateRandomQuest: () => Quest\n}\n\nexport const StoryGenerator: IStoryGenerator = {\n    generatePrologue: (): Quest => {\n        return {\n            title: 'Prologue',\n            id: 'prologue',\n            openActivities: [\n                ActivityFactory.newActivity(),\n                ActivityFactory.newActivity(),\n                ActivityFactory.newActivity()\n            ]\n        }\n    },\n    generateRandomQuest: (): Quest => {\n        return {\n            title: getRandomFromArray(['Get me the dollars', 'Save the day', 'Deliver this letter']),\n            id: uuid(),\n            openActivities: [\n                ActivityFactory.newActivity(),\n                ActivityFactory.newActivity(),\n                ActivityFactory.newActivity()\n            ]\n        }\n    }\n}","import { v4 as uuid } from 'uuid';\nimport { Storage } from '@ionic/storage';\nimport { take, race, takeEvery, takeLatest, call, put, putResolve, select, delay, apply, fork } from 'redux-saga/effects';\nimport { getStorage } from '../storage';\nimport { Activity } from './Activity';\nimport { ActivityFactory } from './ActivityFactory';\nimport { Quest } from './Chapter';\nimport { actionStarted, activeQuestChanged, activityFinished, gameLoaded, newGameStarted, PlayerState, questStarted, selectActiveQuest, selectCurrentActivity, selectGame, selectNextQuestActivity, startGame } from './playerSlice';\nimport { StoryGenerator } from './StoryGenerator';\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { Task } from '@redux-saga/types';\n\nexport function* startGameSaga(action: PayloadAction<string>) {\n    const gameId = action.payload;\n\n    const storage: Storage = yield call(getStorage);\n    const keys: string[] = yield apply(storage, storage.keys, []);\n\n    if (keys.includes(`game_${gameId}`)) {\n        yield call(loadGameSaga, gameId);\n        // yield take(gameLoaded.type)\n    } else {\n        yield call(startNewGameSaga, gameId);\n    }\n\n    yield call(gameLoopSaga);\n}\n\nfunction* startNewGameSaga(gameId: string) {\n    const quest: Quest = yield call(StoryGenerator.generatePrologue);\n    yield put(questStarted(quest))\n    yield call(startNewAction)\n    yield put(newGameStarted({id: gameId, playerName: 'foo'}))\n}\n\nexport function* gameSaga() {\n    yield takeLatest(startGame.type, startGameSaga);\n}\n\nexport function* saveGameSaga() {\n    const gameState: PlayerState = yield select(selectGame);\n    const storage: Storage = yield call(getStorage);\n\n    const json: string = yield call(JSON.stringify, gameState);\n\n    yield apply(storage, storage.set, [`game_${gameState.id}`, json]);\n}\n\nfunction* loadGameSaga(gameId: string) {\n    const storage: Storage = yield call(getStorage);\n    const gameStateJson: string = yield apply(storage, storage.get, [`game_${gameId}`]);\n    const gameState: PlayerState = yield call(JSON.parse, gameStateJson);\n\n    // Apply migrations\n    if (gameState.version === undefined) {\n        gameState.version = 1;\n        gameState.id = uuid();\n    }\n\n    yield put(gameLoaded(gameState));\n}\n\nexport function* startNewAction() {\n    const random: number = yield call(Math.random);\n    const randomEncounter = random > 0.1;\n    let newActivity: Activity|undefined = yield select(selectNextQuestActivity);\n\n    if (!newActivity || randomEncounter) {\n        newActivity = yield call(ActivityFactory.newActivity);\n    }\n\n    yield put(actionStarted(newActivity!));\n}\n\nexport function* gameLoopSaga() {\n    const advanceQuestTask: Task = yield fork(advanceQuest);\n\n    const taskId = uuid();\n\n    while (true) {\n        const currentActivity: ReturnType<typeof selectCurrentActivity> = yield select(selectCurrentActivity);\n\n        if (!currentActivity) {\n            console.error('Game loop called without a currentActivity1')\n        }\n\n        yield delay(currentActivity!.duration * 1000)\n        yield put(activityFinished(currentActivity!))\n        yield call(startNewAction)\n\n        yield call(saveGameSaga);\n    }\n\n    advanceQuestTask.cancel();\n}\n\nexport function* advanceQuest() {\n    yield takeEvery(activityFinished.type, impl);\n\n    function* impl(action: ReturnType<typeof activityFinished>) {\n        const activeQuest: Quest|undefined = yield select(selectActiveQuest);\n\n        if (!activeQuest || activeQuest!.openActivities.length <= 0) {\n            const newActiveQuest: Quest = yield call(StoryGenerator.generateRandomQuest);\n            yield put(questStarted(newActiveQuest));\n            return;\n        }\n\n        const finishedActivity = action.payload;\n\n        if (finishedActivity.id === activeQuest.openActivities[0].id) {\n            const newOpenActivities = [...activeQuest.openActivities];\n            newOpenActivities.shift()\n\n            if (newOpenActivities.length > 0) {\n                const updatedQuest = {\n                    ...activeQuest,\n                    openActivities: newOpenActivities\n                };\n                yield put(activeQuestChanged(updatedQuest));\n            } else {             \n                const newActiveQuest: Quest = yield call(StoryGenerator.generateRandomQuest);\n                yield put(questStarted(newActiveQuest));\n            }\n        }\n    }\n}\n","import { configureStore, AnyAction } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { playerReducer } from './game/playerSlice';\nimport { gameSaga } from './game/gameSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = configureStore({\n    reducer: {\n        player: playerReducer\n    },\n    middleware: [\n      sagaMiddleware\n    ]\n});\n\nsagaMiddleware.run(gameSaga)\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  AnyAction\n>","import { IonApp, IonRouterOutlet, IonSplitPane } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { Redirect, Route } from 'react-router-dom';\nimport Menu from './components/Menu';\nimport { GamePage } from './game/GamePage';\nimport { HomePage } from './home/HomePage';\n\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <IonApp>\n        <IonReactRouter>\n          <IonSplitPane contentId=\"main\">\n            <Menu />\n            <IonRouterOutlet id=\"main\">\n              <Route path=\"/\" exact={true}>\n                <HomePage />\n              </Route>\n              <Route path=\"/game/:gameId\" exact={true}>\n                <GamePage />\n              </Route>\n            </IonRouterOutlet>\n          </IonSplitPane>\n        </IonReactRouter>\n      </IonApp>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}